@using Microsoft.Extensions.Logging
@implements IDisposable
@inject ILogger<Component3> Logger

<h4>Component 3</h4>

@code {

    public Component3()
    {
        // "Logger" is not initialized yet
    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        Logger.LogInformation("----------------------------");
        Logger.LogInformation("3 - SetParametersAsync-start");
        Logger.LogInformation("----------------------------");
        await base.SetParametersAsync(parameters);
        Logger.LogInformation("3 - SetParametersAsync-end");
    }

    protected override void OnInitialized()
    {
        Logger.LogInformation("3 - OnInitialized-start");
        base.OnInitialized();
        Logger.LogInformation("3 - OnInitialized-end");
    }

    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("3 - OnInitializedAsync-start");
        await base.OnInitializedAsync();
        Logger.LogInformation("3 - OnInitializedAsync-end");
    }

    protected override void OnParametersSet()
    {
        Logger.LogInformation("3 - OnParametersSet-start");
        base.OnParametersSet();
        Logger.LogInformation("3 - OnParametersSet-end");
    }

    protected override async Task OnParametersSetAsync()
    {
        Logger.LogInformation("3 - OnParametersSetAsync-start");
        await base.OnParametersSetAsync();
        Logger.LogInformation("3 - OnParametersSetAsync-end");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Logger.LogInformation("3 - OnAfterRender({firstRender})-start", firstRender);
        base.OnAfterRender(firstRender);
        Logger.LogInformation("3 - OnAfterRender({firstRender})-end", firstRender);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Logger.LogInformation("3 - OnAfterRenderAsync({firstRender})-start", firstRender);
        await base.OnAfterRenderAsync(firstRender);
        Logger.LogInformation("3 - OnAfterRenderAsync({firstRender})-end", firstRender);
    }

    public void Dispose()
    {
        Logger.LogInformation("----------------------------");
        Logger.LogInformation("3 - Dispose");
        Logger.LogInformation("----------------------------");
    }
}